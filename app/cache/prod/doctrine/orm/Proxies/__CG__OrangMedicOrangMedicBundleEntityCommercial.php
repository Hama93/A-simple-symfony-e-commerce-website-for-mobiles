<?php

namespace Proxies\__CG__\OrangMedic\OrangMedicBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Commercial extends \OrangMedic\OrangMedicBundle\Entity\Commercial implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'nom', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'prenom', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'sexe', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'mp', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'photo', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'tel', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'status', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'emailCommercial', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'idAdmin', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'libelle');
        }

        return array('__isInitialized__', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'nom', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'prenom', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'sexe', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'mp', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'photo', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'tel', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'status', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'emailCommercial', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'idAdmin', '' . "\0" . 'OrangMedic\\OrangMedicBundle\\Entity\\Commercial' . "\0" . 'libelle');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Commercial $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', array($nom));

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', array());

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom($prenom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', array($prenom));

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', array());

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setSexe($sexe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSexe', array($sexe));

        return parent::setSexe($sexe);
    }

    /**
     * {@inheritDoc}
     */
    public function getSexe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSexe', array());

        return parent::getSexe();
    }

    /**
     * {@inheritDoc}
     */
    public function setMp($mp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMp', array($mp));

        return parent::setMp($mp);
    }

    /**
     * {@inheritDoc}
     */
    public function getMp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMp', array());

        return parent::getMp();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoto($photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoto', array($photo));

        return parent::setPhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoto', array());

        return parent::getPhoto();
    }

    /**
     * {@inheritDoc}
     */
    public function setTel($tel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTel', array($tel));

        return parent::setTel($tel);
    }

    /**
     * {@inheritDoc}
     */
    public function getTel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTel', array());

        return parent::getTel();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailCommercial()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getEmailCommercial();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailCommercial', array());

        return parent::getEmailCommercial();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdAdmin(\OrangMedic\OrangMedicBundle\Entity\Administrateur $idAdmin = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdAdmin', array($idAdmin));

        return parent::setIdAdmin($idAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdAdmin', array());

        return parent::getIdAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function addLibelle(\OrangMedic\OrangMedicBundle\Entity\Produits $libelle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLibelle', array($libelle));

        return parent::addLibelle($libelle);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLibelle(\OrangMedic\OrangMedicBundle\Entity\Produits $libelle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLibelle', array($libelle));

        return parent::removeLibelle($libelle);
    }

    /**
     * {@inheritDoc}
     */
    public function getLibelle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLibelle', array());

        return parent::getLibelle();
    }

}
